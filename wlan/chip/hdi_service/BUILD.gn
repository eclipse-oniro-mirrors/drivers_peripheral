/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2024. All rights reserved
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import("//build/ohos.gni")
import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")

root_path = "//drivers/peripheral/wlan/chip/hdi_service"

ohos_shared_library("libwifi_chip_interface_service_1.0") {
  include_dirs = [
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "$root_path",
  ]

  sources = [
    "$root_path/wifi.cpp",
    "$root_path/interface_tool.cpp",
    "$root_path/wifi_chip_modes.cpp",
    "$root_path/wifi_vendor_hal_list.cpp",
    "$root_path/wifi_vendor_hal.cpp",
    "$root_path/wifi_chip.cpp",
    "$root_path/hdi_sync_util.cpp",
    "$root_path/wifi_vendor_hal_stubs.cpp",
    "$root_path/wifi_ap_iface.cpp",
    "$root_path/wifi_sta_iface.cpp",
    "$root_path/wifi_p2p_iface.cpp",
    "$root_path/hdi_struct_util.cpp",
  ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_wlan:chip_idl_headers",
    "hdf_core:libhdf_host",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
    "init:libbegetutil",
  ]

  deps = [ ]

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_wlan"
}

ohos_shared_library("libchip_hdi_driver") {
  include_dirs = [ "$root_path" ]

  sources = [ "$root_path/wifi_interface_driver.cpp" ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdf_utils",
      "hdf_core:libhdi",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  }

  external_deps += [ "drivers_interface_wlan:libchip_stub_1.0" ]

  shlib_type = "hdi"
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_wlan"
}

group("hdi_chip_service") {
    deps = [
        ":libchip_hdi_driver",
        ":libwifi_chip_interface_service_1.0",
    ]
}