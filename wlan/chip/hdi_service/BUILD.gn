# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/peripheral/wlan/wlan.gni")

ohos_shared_library("libchip_controller_chip_interface_service_2.0") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true  # Enable/disable control flow integrity detection
    boundary_sanitize = false  # Enable boundary san detection
    cfi_cross_dso = true  # Cross-SO CFI Checks
    integer_overflow = false  # Enable integer overflow detection
    ubsan = false  # Enable some Ubsan options
    cfi_vcall_icall_only = true
    debug = false
  }
  include_dirs = []

  sources = [
    "hdi_sync_util.cpp",
    "iface_tool.cpp",
    "iface_util.cpp",
    "wifi.cpp",
    "wifi_ap_iface.cpp",
    "wifi_chip.cpp",
    "wifi_chip_modes.cpp",
    "wifi_ext_iface.cpp",
    "wifi_p2p_iface.cpp",
    "wifi_sta_iface.cpp",
    "wifi_vendor_hal.cpp",
    "wifi_vendor_hal_list.cpp",
    "wifi_vendor_hal_stubs.cpp",
  ]

  defines = [
    "P2P_NAME=\"$drivers_peripheral_wlan_p2p_name\"",
    "HAL_SO_NAME=\"$drivers_peripheral_wlan_feature_vendor\"",
  ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_wlan:chip_idl_headers_2.0",
    "hdf_core:libhdf_host",
    "hdf_core:libhdf_utils",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_single",
  ]

  deps = []

  cflags_cc = [
    "-fvisibility-inlines-hidden",
    "-fdata-sections",
    "-ffunction-sections",
    "-Os",
    "-fno-merge-all-constants",
    "-fno-asynchronous-unwind-tables",
    "-fno-unwind-tables",
  ]
  ldflags = [
    "-Wl,--exclude-libs=ALL",
    "-Wl,--gc-sections",
  ]
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  version_script = "libchip_controller_chip_interface_service.map"
  part_name = "drivers_peripheral_wlan"
}

ohos_shared_library("libchip_hdi_driver") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true  # Enable/disable control flow integrity detection
    boundary_sanitize = false  # Enable boundary san detection
    cfi_cross_dso = true  # Cross-SO CFI Checks
    integer_overflow = false  # Enable integer overflow detection
    ubsan = false  # Enable some Ubsan options
    cfi_vcall_icall_only = true
    debug = false
  }
  include_dirs = []

  sources = [ "chip_controller_driver.cpp" ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdf_utils",
      "hdf_core:libhdi",
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  }

  cflags_cc = [
    "-fvisibility-inlines-hidden",
    "-fdata-sections",
    "-ffunction-sections",
    "-Os",
    "-fno-merge-all-constants",
    "-fno-asynchronous-unwind-tables",
    "-fno-unwind-tables",
  ]
  ldflags = [
    "-Wl,--exclude-libs=ALL",
    "-Wl,--gc-sections",
  ]
  external_deps += [ "drivers_interface_wlan:libchip_stub_2.0" ]

  shlib_type = "hdi"
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_wlan"
}

if (drivers_peripheral_wlan_feature_vendor == "default") {
  ohos_shared_library("wifi_hal_default") {
    include_dirs = [
      "../hdi_service",
      "../wifi_hal",
    ]
    sources = [
      "../wifi_hal/common.cpp",
      "../wifi_hal/cpp_bindings.cpp",
      "../wifi_hal/gscan.cpp",
      "../wifi_hal/wifi_hal.cpp",
      "../wifi_hal/wifi_ioctl.cpp",
      "../wifi_hal/wifi_logger.cpp",
      "../wifi_hal/wifi_scan.cpp",
    ]

    if (drivers_peripheral_wlan_feature_emulator) {
      defines = [ "SUPPORT_EMULATOR" ]
    }

    if (is_standard_system) {
      external_deps = [
        "c_utils:utils",
        "drivers_interface_wlan:chip_idl_headers_2.0",
        "hdf_core:libhdf_ipc_adapter",
        "hdf_core:libhdf_utils",
        "hilog:libhilog",
        "ipc:ipc_single",
        "libnl:libnl_share",
      ]
    } else {
      external_deps = [
        "hilog:libhilog",
        "ipc:ipc_single",
      ]
    }

    install_images = [ chipset_base_dir ]
    subsystem_name = "hdf"
    part_name = "drivers_peripheral_wlan"
  }
}

group("hdi_chip_service") {
  deps = [
    ":libchip_controller_chip_interface_service_2.0",
    ":libchip_hdi_driver",
  ]
  if (drivers_peripheral_wlan_feature_vendor == "default") {
    deps += [ ":wifi_hal_default" ]
  }
}
