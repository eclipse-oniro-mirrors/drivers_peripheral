# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

config("headers_config") {
  include_dirs = [ "../../interfaces/include" ]
}

ohos_shared_library("libcodec_hdi_passthrough_impl") {
  include_dirs = [
    "../../hal/include",
    "../../hal/passthrough/adapter/include",
    "../../hal/passthrough/include",
    "../../hal/v1.0/codec_instance/include",
    "../../hal/v1.0/share_mem/include",
    "../../hal/v1.0/oem_interface/include",
    "../../hal/v1.0/buffer_manager/include",
    "../../utils/include",
  ]

  public_configs = [ ":headers_config" ]

  sources = [
    "../../hdi_service/codec_service_stub/codec_service.c",
    "../src/codec_component_capability_config.c",
    "../src/codec_config_parser.c",
    "../v1.0/buffer_manager/src/buffer_manager.cpp",
    "../v1.0/buffer_manager/src/buffer_manager_wrapper.cpp",
    "../v1.0/codec_instance/src/codec_instance.c",
    "../v1.0/codec_instance/src/codec_instance_manager.cpp",
    "../v1.0/share_mem/src/ashmem_wrapper.cpp",
    "../v1.0/share_mem/src/share_mem.c",
    "adapter/src/component_common.cpp",
    "adapter/src/component_manager.cpp",
    "adapter/src/component_node.cpp",
    "src/codec_adapter.cpp",
    "src/codec_callback_if.c",
    "src/codec_capability_parser.c",
    "src/codec_component_capability.c",
    "src/codec_component_if.c",
    "src/codec_component_manager.c",
  ]
  defines = [
    "CODEC_HAL_PASSTHROUGH",
    "LOG_TAG_PASSTHROUGH",
  ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "drivers_interface_display:hdi_gralloc_client",
      "graphic_surface:buffer_handle",
      "hdf_core:libhdf_utils",
      "hilog:libhilog",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  external_deps += [ "openmax:libopenmax_static" ]
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_codec"
}

group("codec_hdi_passthrough") {
  deps = [ ":libcodec_hdi_passthrough_impl" ]
}
