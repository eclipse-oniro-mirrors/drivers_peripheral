# Copyright (c) 2022 Shenzhen Kaihong DID Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")
ohos_executable("codec_hdi_omx_decode") {
  include_dirs = [
    "./include",
    "//third_party/openmax/api/1.1.2",
    "../../../../../interface/display/composer/hdifd_parcelable",
  ]

  sources = [
    "src/codec_hdi_decode.cpp",
    "src/codec_packet_reader.cpp",
    "src/command_parse.cpp",
  ]

  deps = [ "//third_party/bounds_checking_function:libsec_shared" ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "drivers_interface_display:display_buffer_idl_headers",
      "drivers_interface_display:display_composer_idl_headers",
      "drivers_interface_display:libdisplay_buffer_hdi_impl",
      "drivers_peripheral_codec:libcodec_hdi_omx_client",
      "graphic_chipsetsdk:buffer_handle",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdf_utils",
      "hdf_core:libhdi",
      "hiviewdfx_hilog_native:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  install_enable = false
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_codec"
}

ohos_executable("codec_hdi_omx_encode") {
  include_dirs = [
    "./include",
    "//third_party/openmax/api/1.1.2",
    "../../../../../interface/display/composer/hdifd_parcelable",
  ]

  sources = [
    "src/codec_hdi_encode.cpp",
    "src/command_parse.cpp",
  ]

  deps = [ "//third_party/bounds_checking_function:libsec_shared" ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "drivers_interface_display:display_buffer_idl_headers",
      "drivers_interface_display:display_composer_idl_headers",
      "drivers_interface_display:libdisplay_buffer_hdi_impl",
      "drivers_peripheral_codec:libcodec_hdi_omx_client",
      "graphic_chipsetsdk:buffer_handle",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdf_utils",
      "hdf_core:libhdi",
      "hiviewdfx_hilog_native:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  install_enable = false
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_codec"
}
group("codec_hdi_omx_demo") {
  deps = [
    ":codec_hdi_omx_decode",
    ":codec_hdi_omx_encode",
  ]
}
