# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/hdf_core/adapter/uhdf2/hdi.gni")
import("//drivers/peripheral/audio/audio.gni")

if (!defined(ohos_lite)) {
  ohos_executable("idl_render") {
    public_deps = [ "//drivers/interface/audio/v1_0:audio_idl_headers" ]

    sources = [ "idl_render.c" ]

    defines = []
    if (drivers_peripheral_audio_alsa_lib) {
      defines += [ "ALSA_LIB_MODE" ]
    }

    if (is_standard_system) {
      external_deps = [
        "hdf_core:libhdf_host",
        "hdf_core:libhdf_ipc_adapter",
        "hdf_core:libhdf_utils",
        "hdf_core:libhdi",
        "hiviewdfx_hilog_native:libhilog",
        "utils_base:utils",
      ]
    } else {
      external_deps = [ "hilog:libhilog" ]
    }

    install_enable = true
    install_images = [ chipset_base_dir ]
    subsystem_name = "hdf"
    part_name = "drivers_peripheral_audio"
  }

  ohos_executable("idl_capture") {
    public_deps = [ "//drivers/interface/audio/v1_0:audio_idl_headers" ]

    sources = [ "idl_capture.c" ]

    defines = []
    if (drivers_peripheral_audio_alsa_lib) {
      defines += [ "ALSA_LIB_MODE" ]
    }

    if (is_standard_system) {
      external_deps = [
        "hdf_core:libhdf_host",
        "hdf_core:libhdf_ipc_adapter",
        "hdf_core:libhdf_utils",
        "hdf_core:libhdi",
        "hiviewdfx_hilog_native:libhilog",
        "utils_base:utils",
      ]
    } else {
      external_deps = [ "hilog:libhilog" ]
    }

    install_enable = true
    install_images = [ chipset_base_dir ]
    subsystem_name = "hdf"
    part_name = "drivers_peripheral_audio"
  }
}

group("idl_audio_sample") {
  if (!defined(ohos_lite)) {
    if (!defined(enable_hdf_proxy_stub) || enable_hdf_proxy_stub == true) {
      deps = [
        ":idl_capture",
        ":idl_render",
      ]
    }
  }
}
