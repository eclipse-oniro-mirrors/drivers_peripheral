# Copyright (c) 2025 - 2026 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../camera.gni")

ut_root_path = ".."

if (defined(ohos_lite)) {
  import("//build/lite/config/test.gni")
  import("../../../../../hdf_core/adapter/uhdf/uhdf.gni")

  config("camera_ut_test_config") {
    visibility = [ ":*" ]
    cflags_cc = [ "-std=c++17" ]
    if (enable_camera_coverage) {
      cflags_cc += [ "--coverage" ]
      ldflags = [ "--coverage" ]
    }
  }

  unittest("camera_utils_ut") {
    output_extension = "bin"
    output_dir = "$root_out_dir/test/unittest/hdf"
    sources = [
      # camera utils test
      "$ut_root_path/utils/camera_utils_utest.cpp",
    ]
    include_dirs = [
      # camera common includes
      "$camera_path/include",
    ]
    deps = [ "$camera_path/utils:peripheral_camera_utils" ]
    external_deps = [
      "drivers_interface_camera:metadata",
      "hdf_core:libhdf_utils",
      "init:libbegetutil",
    ]
  }
} else {
  import("//build/test.gni")

  module_output_path = "drivers_peripheral_camera/camera"

  config("camera_ut_test_config") {
    visibility = [ ":*" ]

    cflags_cc = [
      "-Wno-error",
      "-std=c++17",
    ]
    if (enable_camera_coverage) {
      ldflags = [ "--coverage" ]
    }
  }
  ohos_unittest("camera_utils_ut") {
    testonly = true
    module_out_path = module_output_path
    sources = [
      # camera utils test
      "$ut_root_path/utils/camera_utils_utest.cpp",
    ]

    include_dirs = [
      # camera common includes
      "$camera_path/include",
    ]

    deps = [ "$camera_path/utils:peripheral_camera_utils" ]

    if (is_standard_system) {
      external_deps = [
        "c_utils:utils",
        "drivers_interface_camera:metadata",
        "googletest:gmock_main",
        "googletest:gtest",
        "googletest:gtest_main",
        "hdf_core:libhdf_utils",
        "hilog:libhilog",
        "init:libbegetutil",
      ]
      public_configs = [ ":camera_ut_test_config" ]
    }
  }
}
