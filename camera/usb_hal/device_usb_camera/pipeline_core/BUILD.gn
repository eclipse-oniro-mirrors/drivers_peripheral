# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")
import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")
import("//drivers/peripheral/camera/usb_hal/camera_usb.gni")

config("pipe_config") {
  visibility = [ ":*" ]

  cflags_cc = []
}

ohos_shared_library("camera_pipeline_core") {
  sources = [
    "$board_usb_camera_path/pipeline_core/src/node/codec_node.cpp",
    "$board_usb_camera_path/pipeline_core/src/node/exif_node.cpp",
    "$board_usb_camera_path/pipeline_core/src/node/face_node.cpp",
    "$camera_path_usb/adapter/platform/v4l2/src/pipeline_core/nodes/uvc_node/uvc_node.cpp",
    "$camera_path_usb/pipeline_core/pipeline_impl/src/strategy/config/config.c",
    "$camera_path_usb/pipeline_core/pipeline_impl/src/strategy/config/params.c",
    "$camera_path_vdi/pipeline_core/host_stream/src/host_stream_impl.cpp",
    "$camera_path_vdi/pipeline_core/host_stream/src/host_stream_mgr_impl.cpp",
    "$camera_path_vdi/pipeline_core/ipp/src/algo_plugin.cpp",
    "$camera_path_vdi/pipeline_core/ipp/src/algo_plugin_manager.cpp",
    "$camera_path_vdi/pipeline_core/ipp/src/ipp_algo_parser.cpp",
    "$camera_path_vdi/pipeline_core/ipp/src/ipp_node.cpp",
    "$camera_path_vdi/pipeline_core/ipp/src/offline_pipeline.cpp",
    "$camera_path_vdi/pipeline_core/ipp/src/offline_pipeline_manager.cpp",
    "$camera_path_vdi/pipeline_core/nodes/src/dummy_node/dummy_node.cpp",
    "$camera_path_vdi/pipeline_core/nodes/src/fork_node/fork_node.cpp",
    "$camera_path_vdi/pipeline_core/nodes/src/merge_node/merge_node.cpp",
    "$camera_path_vdi/pipeline_core/nodes/src/node_base/node_base.cpp",
    "$camera_path_vdi/pipeline_core/nodes/src/sensor_node/sensor_node.cpp",
    "$camera_path_vdi/pipeline_core/nodes/src/sink_node/sink_node.cpp",
    "$camera_path_vdi/pipeline_core/nodes/src/source_node/source_node.cpp",
    "$camera_path_vdi/pipeline_core/nodes/src/stability_node/stability_node.cpp",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/builder/stream_pipeline_builder.cpp",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/dispatcher/stream_pipeline_dispatcher.cpp",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/parser/config_parser.cpp",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/strategy/stream_pipeline_strategy.cpp",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/stream_pipeline_core.cpp",
    "$camera_path_vdi/pipeline_core/src/pipeline_core.cpp",
  ]
  include_dirs = [
    "$camera_path_vdi/utils/exif",
    "$camera_path_usb/../interfaces/include",
    "$camera_path_usb/../interfaces/hdi_ipc",
    "$camera_path_vdi/include",
    "$camera_path_usb/hdi_impl",
    "$camera_path_usb/hdi_impl/camera_host/include",
    "$camera_path_usb/hdi_impl/camera_device/include",
    "$camera_path_usb/hdi_impl/stream_operator/include",
    "$camera_path_usb/hdi_impl/include",
    "$camera_path_usb/device_manager",
    "$camera_path_vdi/device_manager/include",
    "$camera_path_vdi/metadata_manager/include",
    "$camera_path_vdi/pipeline_core",
    "$camera_path_vdi/pipeline_core/host_stream/include",
    "$camera_path_vdi/pipeline_core/utils",
    "$camera_path_vdi/pipeline_core/nodes/include",
    "$camera_path_vdi/pipeline_core/nodes/src/sensor_node",
    "$camera_path_vdi/pipeline_core/nodes/src/node_base",
    "$camera_path_vdi/pipeline_core/nodes/src/sink_node",
    "$camera_path_vdi/pipeline_core/nodes/src/source_node",
    "$camera_path_vdi/pipeline_core/nodes/src/merge_node",
    "$camera_path_vdi/pipeline_core/nodes/src/dummy_node",
    "$camera_path_vdi/pipeline_core/pipeline_impl/include",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src",
    "$camera_path_vdi/pipeline_core/include",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/builder",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/dispatcher",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/parser",
    "$camera_path_vdi/pipeline_core/pipeline_impl/src/strategy",
    "$camera_path_usb/pipeline_core/pipeline_impl/src/strategy/config",
    "$camera_path_vdi/pipeline_core/ipp/include",
    "$camera_path_usb/interfaces/hdi",
    "$camera_path_vdi/utils/event",
    "$camera_path_vdi/adapter/platform/v4l2/src/device_manager/include",
    "$camera_path_vdi/device_manager/include",
    "$camera_path_usb/adapter/platform/v4l2/src/pipeline_core/nodes/v4l2_source_node",
    "$camera_path_usb/adapter/platform/v4l2/src/pipeline_core/nodes/uvc_node",
    "$camera_path_vdi/adapter/platform/v4l2/src/driver_adapter/include/",
    "src/node",
    "$third_path/libexif",
    "$third_path/ffmpeg",
  ]

  deps = [
    "$../../../../../hdf_core/adapter/uhdf2/utils:libhdf_utils",
    "$board_usb_camera_path:config.c",
    "$board_usb_camera_path:params.c",
    "$camera_path_usb/buffer_manager:camera_buffer_manager",
    "$camera_path_usb/device_manager:camera_device_manager",
    "$camera_path_usb/metadata_manager:camera_metadata_manager",
    "$drivers_path/peripheral/camera/usb_hal/utils:camera_utils",
    "$third_path/ffmpeg:libohosffmpeg",
    "$third_path/libjpeg-turbo:turbojpeg_static",
  ]

  external_deps = [
    "drivers_interface_camera:libcamera_stub_1.0",
    "drivers_interface_camera:metadata",
    "graphic_chipsetsdk:surface",
    "hdf_core:libhdf_utils",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_single",
  ]

  public_configs = [ ":pipe_config" ]
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_camera"
}

config("example_config") {
  visibility = [ ":*" ]

  cflags = [
    "-Wno-error",
    "-Wno-unused-function",
    "-Wno-unused-parameter",
  ]
}
