# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

ohos_executable("clearplay_sample_media_key_system_factory") {
  include_dirs = [
    "//drivers/peripheral/clearplay/test/sample/include",
    "//drivers/peripheral/clearplay/hdi_service/include/drm",
    "//drivers/peripheral/clearplay/hdi_service/include",
    "//drivers/peripheral/clearplay/hdi_service/common",
    "//drivers/peripheral/clearplay/interfaces/include/drm",
    "//drivers/peripheral/clearplay/interfaces/include",
  ]
  sources = [ "//drivers/peripheral/clearplay/test/sample/src/clearplay_sample_media_key_system_factory.cpp" ]

  deps = [
    "//drivers/peripheral/clearplay/hdi_service:libmedia_key_system_factory_clearplay_service_1.0",
    "//drivers/peripheral/clearplay/interfaces:libclearplay_driver",
  ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]

  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdf_utils",
    "hdf_core:libhdi",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]

  install_enable = false
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_clearplay"
}

ohos_executable("clearplay_sample_media_key_system") {
  include_dirs = [
    "//drivers/peripheral/clearplay/test/sample/include",
    "//drivers/peripheral/clearplay/hdi_service/include/drm",
    "//drivers/peripheral/clearplay/hdi_service/include",
    "//drivers/peripheral/clearplay/hdi_service/common",
    "//drivers/peripheral/clearplay/interfaces/include/drm",
    "//drivers/peripheral/clearplay/interfaces/include",
  ]
  sources = [ "//drivers/peripheral/clearplay/test/sample/src/clearplay_sample_media_key_system.cpp" ]

  deps = [
    "//drivers/peripheral/clearplay/hdi_service:libmedia_key_system_factory_clearplay_service_1.0",
    "//drivers/peripheral/clearplay/interfaces:libclearplay_driver",
  ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]

  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdf_utils",
    "hdf_core:libhdi",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]

  install_enable = false
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_clearplay"
}

ohos_executable("clearplay_sample_decrypt") {
  include_dirs = [
    "//drivers/peripheral/clearplay/test/sample/include",
    "//drivers/peripheral/clearplay/hdi_service/include/drm",
    "//drivers/peripheral/clearplay/hdi_service/include",
    "//drivers/peripheral/clearplay/hdi_service/common",
    "//drivers/peripheral/clearplay/interfaces/include/drm",
    "//drivers/peripheral/clearplay/interfaces/include",
  ]
  sources = [
    "//drivers/peripheral/clearplay/test/sample/src/byte_show.cpp",
    "//drivers/peripheral/clearplay/test/sample/src/clearplay_sample_decrypt.cpp",
  ]

  deps = [
    "//drivers/peripheral/clearplay/hdi_service:libmedia_key_system_factory_clearplay_service_1.0",
    "//drivers/peripheral/clearplay/interfaces:libclearplay_driver",
  ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]

  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdf_utils",
    "hdf_core:libhdi",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]

  install_enable = false
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_clearplay"
}

group("clearplay_sample") {
  deps = [
    ":clearplay_sample_decrypt",
    ":clearplay_sample_media_key_system",
    ":clearplay_sample_media_key_system_factory",
  ]
}
