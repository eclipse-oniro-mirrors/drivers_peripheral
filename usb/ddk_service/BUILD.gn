# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")
import("//drivers/peripheral/usb/usb.gni")

config("ddk_public_config") {
  include_dirs = [
    "include/",
    "${usb_driver_path}/ddk/ndk/",
  ]
}

ohos_shared_library("libusb_ddk_service_1.0") {
  sources = [
    "src/usb_ddk_hash.cpp",
    "src/usb_ddk_impl.c",
    "src/usb_ddk_service.c",
  ]
  include_dirs = [
    "${usb_driver_path}/interfaces/ddk/host",
    "${usb_driver_path}/interfaces/ddk/common",
    "${usb_driver_path}/ddk/host/include",
    "${hdf_framework_path}/model/usb/include",
  ]

  configs = [ ":ddk_public_config" ]

  deps = [
    "${usb_driver_path}/ddk:libusb_ddk_host",
    "${usb_driver_path}/ddk:libusb_pnp_manager",
  ]

  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_host",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdf_utils",
    "hdf_core:libhdi",
    "hisysevent_native:libhisysevent",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_single",
  ]

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_usb"
}

ohos_shared_library("libusb_ddk_stub") {
  sources = [
    "src/notification_callback_proxy.c",
    "src/usb_ddk_stub.c",
    "src/usb_ddk_types.c",
  ]

  configs = [ ":ddk_public_config" ]

  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_host",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdf_utils",
    "hdf_core:libhdi",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_single",
  ]

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_usb"
}

ohos_shared_library("libusb_ddk_driver") {
  sources = [ "src/usb_ddk_driver.c" ]

  deps = [ ":libusb_ddk_stub" ]

  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_host",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdf_utils",
    "hdf_core:libhdi",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_single",
  ]

  configs = [ ":ddk_public_config" ]

  shlib_type = "hdi"
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_usb"
}

ohos_shared_library("libusb_ddk_proxy") {
  sources = [
    "${usb_driver_path}/ddk/host/src/usb_config_desc_parser.c",
    "src/notification_callback_stub.c",
    "src/usb_ddk_proxy.c",
    "src/usb_ddk_types.c",
  ]

  configs = [ ":ddk_public_config" ]
  include_dirs = [
    "${usb_driver_path}/interfaces/ddk/host",
    "${usb_driver_path}/interfaces/ddk/common",
    "${usb_driver_path}/ddk/host/include",
    "${hdf_framework_path}/model/usb/include",
  ]

  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_host",
    "hdf_core:libhdf_ipc_adapter",
    "hdf_core:libhdf_utils",
    "hdf_core:libhdi",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_single",
  ]

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_usb"
}

ohos_shared_library("usb_ndk") {
  include_dirs = [ "include/" ]

  sources = [ "src/usb_ddk_api.c" ]

  deps = [ ":libusb_ddk_proxy" ]

  configs = [ ":ddk_public_config" ]
  external_deps = [
    "c_utils:utils",
    "hdf_core:libhdf_utils",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]
  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_usb"
}

group("usb_ddk_target") {
  deps = [
    ":libusb_ddk_driver",
    ":libusb_ddk_proxy",
    ":libusb_ddk_service_1.0",
    ":usb_ndk",
  ]
}
