# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("../../../sensor.gni")

module_output_path = "drivers_peripheral_sensor/drivers_peripheral_sensor"

group("SensorTestFiveClients") {
    deps = []
    testonly = true
    deps += [
        ":SensorSetBatchTest1",
        ":SensorSetBatchTest2",
        ":SensorSetBatchTest3",
        ":SensorSetBatchTest4",
        ":SensorSetBatchTest5",
    ]
}

ohos_unittest("SensorSetBatchTest1") {
    module_out_path = module_output_path

    include_dirs = [
        "../../../interfaces/include",
        "../../../interfaces/v1_0",
        "../../../utils/include",
    ]

    sources = [ "sensor_setbatch_test.cpp" ]

    cflags = [
        "-Wall",
        "-Wextra",
        "-Werror",
        "-fsigned-char",
        "-fno-common",
        "-fno-strict-aliasing",
    ]

    defines = ["SAMPLINGINTERVAL=200000000"]

    if (is_standard_system) {
        external_deps = [
            "drivers_interface_sensor:libsensor_proxy_2.0",
            "drivers_interface_sensor:libsensor_proxy_2.1",
            "drivers_interface_sensor:libsensor_proxy_3.0",
            "hdf_core:libhdf_host",
            "hdf_core:libhdf_utils",
            "hilog:libhilog",
            "hitrace:hitrace_meter",
            "ipc:ipc_single",
        ]
        if (c_utils_enable) {
            external_deps += [ "c_utils:utils" ]
        }
    } else {
        external_deps = [ "hilog:libhilog" ]
    }
    external_deps += [ "ipc:ipc_single" ]
}

ohos_unittest("SensorSetBatchTest2") {
    module_out_path = module_output_path

    include_dirs = [
        "../../../interfaces/include",
        "../../../interfaces/v1_0",
        "../../../utils/include",
    ]

    sources = [ "sensor_setbatch_test.cpp" ]

    cflags = [
        "-Wall",
        "-Wextra",
        "-Werror",
        "-fsigned-char",
        "-fno-common",
        "-fno-strict-aliasing",
    ]

    defines = ["SAMPLINGINTERVAL=100000000"]

    if (is_standard_system) {
        external_deps = [
            "drivers_interface_sensor:libsensor_proxy_2.0",
            "drivers_interface_sensor:libsensor_proxy_2.1",
            "drivers_interface_sensor:libsensor_proxy_3.0",
            "hdf_core:libhdf_host",
            "hdf_core:libhdf_utils",
            "hilog:libhilog",
            "hitrace:hitrace_meter",
            "ipc:ipc_single",
        ]
        if (c_utils_enable) {
            external_deps += [ "c_utils:utils" ]
        }
    } else {
        external_deps = [ "hilog:libhilog" ]
    }
    external_deps += [ "ipc:ipc_single" ]
}

ohos_unittest("SensorSetBatchTest3") {
    module_out_path = module_output_path

    include_dirs = [
        "../../../interfaces/include",
        "../../../interfaces/v1_0",
        "../../../utils/include",
    ]

    sources = [ "sensor_setbatch_test.cpp" ]

    cflags = [
        "-Wall",
        "-Wextra",
        "-Werror",
        "-fsigned-char",
        "-fno-common",
        "-fno-strict-aliasing",
    ]

    defines = ["SAMPLINGINTERVAL=50000000"]

    if (is_standard_system) {
        external_deps = [
            "drivers_interface_sensor:libsensor_proxy_2.0",
            "drivers_interface_sensor:libsensor_proxy_2.1",
            "drivers_interface_sensor:libsensor_proxy_3.0",
            "hdf_core:libhdf_host",
            "hdf_core:libhdf_utils",
            "hilog:libhilog",
            "hitrace:hitrace_meter",
            "ipc:ipc_single",
        ]
        if (c_utils_enable) {
            external_deps += [ "c_utils:utils" ]
        }
    } else {
        external_deps = [ "hilog:libhilog" ]
    }
    external_deps += [ "ipc:ipc_single" ]
}

ohos_unittest("SensorSetBatchTest4") {
    module_out_path = module_output_path

    include_dirs = [
        "../../../interfaces/include",
        "../../../interfaces/v1_0",
        "../../../utils/include",
    ]

    sources = [ "sensor_setbatch_test.cpp" ]

    cflags = [
        "-Wall",
        "-Wextra",
        "-Werror",
        "-fsigned-char",
        "-fno-common",
        "-fno-strict-aliasing",
    ]

    defines = ["SAMPLINGINTERVAL=20000000"]

    if (is_standard_system) {
        external_deps = [
            "drivers_interface_sensor:libsensor_proxy_2.0",
            "drivers_interface_sensor:libsensor_proxy_2.1",
            "drivers_interface_sensor:libsensor_proxy_3.0",
            "hdf_core:libhdf_host",
            "hdf_core:libhdf_utils",
            "hilog:libhilog",
            "hitrace:hitrace_meter",
            "ipc:ipc_single",
        ]
        if (c_utils_enable) {
            external_deps += [ "c_utils:utils" ]
        }
    } else {
        external_deps = [ "hilog:libhilog" ]
    }
    external_deps += [ "ipc:ipc_single" ]
}

ohos_unittest("SensorSetBatchTest5") {
    module_out_path = module_output_path

    include_dirs = [
        "../../../interfaces/include",
        "../../../interfaces/v1_0",
        "../../../utils/include",
    ]

    sources = [ "sensor_setbatch_test.cpp" ]

    cflags = [
        "-Wall",
        "-Wextra",
        "-Werror",
        "-fsigned-char",
        "-fno-common",
        "-fno-strict-aliasing",
    ]

    defines = ["SAMPLINGINTERVAL=10000000"]

    if (is_standard_system) {
        external_deps = [
            "drivers_interface_sensor:libsensor_proxy_2.0",
            "drivers_interface_sensor:libsensor_proxy_2.1",
            "drivers_interface_sensor:libsensor_proxy_3.0",
            "hdf_core:libhdf_host",
            "hdf_core:libhdf_utils",
            "hilog:libhilog",
            "hitrace:hitrace_meter",
            "ipc:ipc_single",
        ]
        if (c_utils_enable) {
            external_deps += [ "c_utils:utils" ]
        }
    } else {
        external_deps = [ "hilog:libhilog" ]
    }
    external_deps += [ "ipc:ipc_single" ]
}